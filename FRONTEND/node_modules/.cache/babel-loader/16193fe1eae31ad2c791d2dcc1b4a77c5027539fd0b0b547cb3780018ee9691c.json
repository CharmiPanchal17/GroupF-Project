{"ast":null,"code":"import axios from'axios';import toast from'react-hot-toast';const FetchIssues=async setCourseUnits=>{const token=localStorage.getItem('token');const API_URL=`${process.env.REACT_APP_API_URL}/issues/list/`;try{const response=await axios.get(API_URL,{headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`}});if(response.status===200){setCourseUnits(response.data);}}catch(error){var _error$response;console.error(\"Login failed:\",((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);}};const DeleteIssue=async id=>{const token=localStorage.getItem('token');const API_URL=`${process.env.REACT_APP_API_URL}/issues/${id}/delete/`;try{const response=await axios.delete(API_URL,{headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`}});if(response.status===200){console.log(response);}}catch(error){var _error$response2;console.error(\"Delete failed:\",((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||error.message);}};const UpdateIssue=async(id,data)=>{const token=localStorage.getItem('token');const API_URL=`${process.env.REACT_APP_API_URL}/issues/${id}/update/`;try{const response=await axios.patch(API_URL,data,{headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`}});if(response.status===200){console.log(response);toast('Updated Issue Successfully',{style:{backgroundColor:'green',color:'white'}});}}catch(error){var _error$response3;toast('Issue Update Failed',{style:{backgroundColor:'red',color:'white'}});console.error(\"Delete failed:\",((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data)||error.message);}};const ResolveIssue=async id=>{const token=localStorage.getItem('token');console.log(\"Token:\",token);const API_URL=`${process.env.REACT_APP_API_URL}/issues/${id}/resolve/`;try{const response=await axios.patch(API_URL,{},{headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`}});console.log(response);if(response.status===200){toast('Issue Resolved Successfully',{style:{backgroundColor:'green',color:'white'}});}}catch(error){var _error$response5;if(error.message){var _error$response4;toast((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.data.error,{style:{backgroundColor:'red',color:'white'}});}else{toast('Issue Update Failed',{style:{backgroundColor:'red',color:'white'}});}console.error(\"Issue Update Failed:\",((_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.data)||error.message);}};export{FetchIssues,DeleteIssue,UpdateIssue,ResolveIssue};","map":{"version":3,"names":["axios","toast","FetchIssues","setCourseUnits","token","localStorage","getItem","API_URL","process","env","REACT_APP_API_URL","response","get","headers","status","data","error","_error$response","console","message","DeleteIssue","id","delete","log","_error$response2","UpdateIssue","patch","style","backgroundColor","color","_error$response3","ResolveIssue","_error$response5","_error$response4"],"sources":["C:/Users/antho/Desktop/GroupF-Project/FRONTEND/src/services/issueService.js"],"sourcesContent":["import axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst FetchIssues = async (setCourseUnits) => {\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    const API_URL = `${process.env.REACT_APP_API_URL}/issues/list/`;\r\n\r\n    try {\r\n        const response = await axios.get(API_URL, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n        });\r\n        if (response.status === 200) {\r\n            setCourseUnits(response.data)\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(\"Login failed:\", error.response?.data || error.message);\r\n    }\r\n};\r\n\r\nconst DeleteIssue = async (id) => {\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    const API_URL = `${process.env.REACT_APP_API_URL}/issues/${id}/delete/`;\r\n\r\n    try {\r\n        const response = await axios.delete(API_URL, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n        });\r\n        if (response.status === 200) {\r\n            console.log(response)\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(\"Delete failed:\", error.response?.data || error.message);\r\n    }\r\n};\r\n\r\nconst UpdateIssue = async (id, data) => {\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    const API_URL = `${process.env.REACT_APP_API_URL}/issues/${id}/update/`;\r\n\r\n    try {\r\n        const response = await axios.patch(API_URL, data, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n        });\r\n        if (response.status === 200) {\r\n            console.log(response)\r\n            toast('Updated Issue Successfully', {style: {backgroundColor: 'green', color: 'white'}})\r\n        }\r\n\r\n    } catch (error) {\r\n        toast('Issue Update Failed', {style: {backgroundColor: 'red', color: 'white'}})\r\n        console.error(\"Delete failed:\", error.response?.data || error.message);\r\n    }\r\n};\r\nconst ResolveIssue = async (id) => {\r\n    const token = localStorage.getItem('token');\r\n    console.log(\"Token:\", token);\r\n    \r\n    const API_URL = `${process.env.REACT_APP_API_URL}/issues/${id}/resolve/`;\r\n    \r\n    try {\r\n        const response = await axios.patch(\r\n            API_URL, \r\n            {},\r\n            { \r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n            }\r\n        );\r\n        console.log(response);\r\n        if (response.status === 200) {\r\n            toast('Issue Resolved Successfully', {style: {backgroundColor: 'green', color: 'white'}});\r\n        }\r\n    } catch (error) {\r\n        if (error.message) {\r\n            toast(error.response?.data.error, {style: {backgroundColor: 'red', color: 'white'}});\r\n        } else {\r\n            toast('Issue Update Failed', {style: {backgroundColor: 'red', color: 'white'}});\r\n        }\r\n        console.error(\"Issue Update Failed:\", error.response?.data || error.message);\r\n    }\r\n};\r\n\r\n\r\nexport { FetchIssues, DeleteIssue, UpdateIssue, ResolveIssue }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}