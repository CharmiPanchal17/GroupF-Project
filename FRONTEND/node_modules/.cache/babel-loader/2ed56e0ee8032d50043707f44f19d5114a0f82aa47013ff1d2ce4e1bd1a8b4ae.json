{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antho\\\\Desktop\\\\GroupF-Project\\\\FRONTEND\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect, useMemo } from 'react';\nimport { FetchUser } from '../services/userService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authState, setAuthState] = useState({\n    isAuthenticated: false,\n    userId: '',\n    userData: null,\n    loading: true,\n    error: null\n  });\n\n  // Parse token safely\n  const parseToken = token => {\n    try {\n      return JSON.parse(atob(token.split('.')[1]));\n    } catch (error) {\n      console.error(\"Token parsing failed:\", error);\n      return null;\n    }\n  };\n\n  // Initialize auth state\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setAuthState(prev => ({\n          ...prev,\n          loading: false\n        }));\n        return;\n      }\n      const payload = parseToken(token);\n      if (!(payload !== null && payload !== void 0 && payload.user_id)) {\n        setAuthState(prev => ({\n          ...prev,\n          loading: false\n        }));\n        return;\n      }\n      try {\n        setAuthState(prev => ({\n          ...prev,\n          loading: true\n        }));\n        const userData = await FetchUser(payload.user_id);\n        setAuthState({\n          isAuthenticated: true,\n          userId: payload.user_id,\n          userData,\n          loading: false,\n          error: null\n        });\n      } catch (error) {\n        console.error(\"Failed to fetch user:\", error);\n        setAuthState({\n          isAuthenticated: false,\n          userId: '',\n          userData: null,\n          loading: false,\n          error: \"Failed to load user data\"\n        });\n      }\n    };\n    initializeAuth();\n  }, []);\n\n  // Memoized context value\n  const contextValue = useMemo(() => {\n    var _authState$userData;\n    return {\n      ...authState,\n      isVerified: ((_authState$userData = authState.userData) === null || _authState$userData === void 0 ? void 0 : _authState$userData.is_verified) || false,\n      setAuthData: newData => setAuthState(prev => ({\n        ...prev,\n        ...newData\n      })),\n      logout: () => {\n        localStorage.removeItem(\"token\");\n        setAuthState({\n          isAuthenticated: false,\n          userId: '',\n          userData: null,\n          loading: false,\n          error: null\n        });\n      }\n    };\n  }, [authState]);\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NDkBX8jEqG+5IrslQ9DoVyoLcSU=\");\n_c = AuthProvider;\nexport { authContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useMemo","FetchUser","jsxDEV","_jsxDEV","authContext","AuthProvider","children","_s","authState","setAuthState","isAuthenticated","userId","userData","loading","error","parseToken","token","JSON","parse","atob","split","console","initializeAuth","localStorage","getItem","prev","payload","user_id","contextValue","_authState$userData","isVerified","is_verified","setAuthData","newData","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/antho/Desktop/GroupF-Project/FRONTEND/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useMemo } from 'react';\r\nimport { FetchUser } from '../services/userService';\r\n\r\nconst authContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [authState, setAuthState] = useState({\r\n    isAuthenticated: false,\r\n    userId: '',\r\n    userData: null,\r\n    loading: true,\r\n    error: null\r\n  });\r\n\r\n  // Parse token safely\r\n  const parseToken = (token) => {\r\n    try {\r\n      return JSON.parse(atob(token.split('.')[1]));\r\n    } catch (error) {\r\n      console.error(\"Token parsing failed:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Initialize auth state\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      \r\n      if (!token) {\r\n        setAuthState(prev => ({ ...prev, loading: false }));\r\n        return;\r\n      }\r\n\r\n      const payload = parseToken(token);\r\n      if (!payload?.user_id) {\r\n        setAuthState(prev => ({ ...prev, loading: false }));\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setAuthState(prev => ({ ...prev, loading: true }));\r\n        const userData = await FetchUser(payload.user_id);\r\n        \r\n        setAuthState({\r\n          isAuthenticated: true,\r\n          userId: payload.user_id,\r\n          userData,\r\n          loading: false,\r\n          error: null\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch user:\", error);\r\n        setAuthState({\r\n          isAuthenticated: false,\r\n          userId: '',\r\n          userData: null,\r\n          loading: false,\r\n          error: \"Failed to load user data\"\r\n        });\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  // Memoized context value\r\n  const contextValue = useMemo(() => ({\r\n    ...authState,\r\n    isVerified: authState.userData?.is_verified || false,\r\n    setAuthData: (newData) => setAuthState(prev => ({ ...prev, ...newData })),\r\n    logout: () => {\r\n      localStorage.removeItem(\"token\");\r\n      setAuthState({\r\n        isAuthenticated: false,\r\n        userId: '',\r\n        userData: null,\r\n        loading: false,\r\n        error: null\r\n      });\r\n    }\r\n  }), [authState]);\r\n\r\n  return (\r\n    <authContext.Provider value={contextValue}>\r\n      {children}\r\n    </authContext.Provider>\r\n  );\r\n};\r\n\r\nexport { authContext, AuthProvider };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}