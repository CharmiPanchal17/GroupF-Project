{"ast":null,"code":"import React,{useState}from'react';import\"./Registrardashboard.css\";// Fixing the case for component import\n// Initial issues with added 'dateSubmitted' field\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const initialIssues=[{id:1,studentName:'John Doe',course:'BSCS',courseUnit:'DSA',lecturerName:'Kizito',status:'Pending',dateSubmitted:'2025-03-15'},{id:2,studentName:'Jane Smith',course:'BSSE',courseUnit:'SDP',lecturerName:'Daniel',status:'Resolved',dateSubmitted:'2025-03-16'},{id:3,studentName:'Samuel Green',course:'BLIS',courseUnit:'SAAD',lecturerName:'Kevin',status:'Pending',dateSubmitted:'2025-03-17'},{id:3,studentName:'Sarah Grace',course:'BIST',courseUnit:'SAAD',lecturerName:'Kevin',status:'Pending',dateSubmitted:'2025-03-14'}];export default function RegistrarDashboard(){const[issues,setIssues]=useState(initialIssues);// Handle submission of new issues\nconst onSubmitIssue=newIssue=>{setIssues(prevIssues=>[...prevIssues,newIssue]);};// Toggle issue status between 'Pending' and 'Resolved'\nconst toggleStatus=id=>{setIssues(prevIssues=>prevIssues.map(issue=>issue.id===id?{...issue,status:issue.status==='Pending'?'Resolved':'Pending'}:issue));};// Group issues by lecturer for the student issues list\nconst groupByLecturer=issues.reduce((grouped,issue)=>{if(!grouped[issue.lecturerName]){grouped[issue.lecturerName]=[];}grouped[issue.lecturerName].push(issue);return grouped;},{});// Get list of unique lecturers and their course units\nconst lecturersList=Array.from(new Set(issues.map(issue=>issue.lecturerName))).map(lecturerName=>({lecturerName,courses:issues.filter(issue=>issue.lecturerName===lecturerName).map(issue=>issue.courseUnit)}));return/*#__PURE__*/_jsxs(\"div\",{className:\"p-8 max-w-4xl mx-auto\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-4\",children:\"REGISTRAR DASHBOARD\"}),/*#__PURE__*/_jsx(\"issuepage\",{onSubmitIssue:onSubmitIssue}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mt-8 mb-4\",children:\"Lecturers and Course Units\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-disc pl-6\",children:lecturersList.map(lecturer=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[lecturer.lecturerName,\":\"]}),\" \",lecturer.courses.join(', ')]},lecturer.lecturerName))}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mt-8 mb-4\",children:\"Student Issues\"}),Object.keys(groupByLecturer).map(lecturer=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold\",children:lecturer}),/*#__PURE__*/_jsxs(\"table\",{className:\"w-full border-collapse border border-gray-300 mt-4\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"bg-gray-200\",children:[/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-300 p-2\",children:\"Student Name\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-300 p-2\",children:\"Course\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-300 p-2\",children:\"Course Unit\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-300 p-2\",children:\"Date Submitted\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-300 p-2\",children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-300 p-2\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:groupByLecturer[lecturer].map(issue=>/*#__PURE__*/_jsxs(\"tr\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-300 p-2\",children:issue.studentName}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-300 p-2\",children:issue.course}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-300 p-2\",children:issue.courseUnit}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-300 p-2\",children:issue.dateSubmitted}),/*#__PURE__*/_jsx(\"td\",{className:`border border-gray-300 p-2 ${issue.status==='Resolved'?'text-green-600':'text-red-600'}`,children:issue.status}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-300 p-2\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleStatus(issue.id),className:\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-4 rounded\",children:issue.status==='Pending'?'Mark as Resolved':'Mark as Pending'})})]},issue.id))})]})]},lecturer))]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","initialIssues","id","studentName","course","courseUnit","lecturerName","status","dateSubmitted","RegistrarDashboard","issues","setIssues","onSubmitIssue","newIssue","prevIssues","toggleStatus","map","issue","groupByLecturer","reduce","grouped","push","lecturersList","Array","from","Set","courses","filter","className","children","lecturer","join","Object","keys","onClick"],"sources":["C:/Users/antho/Desktop/GroupF-Project/FRONTEND/src/AITS_Pages/Registrardashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./Registrardashboard.css\";// Fixing the case for component import\r\n\r\n// Initial issues with added 'dateSubmitted' field\r\nconst initialIssues = [\r\n  { id: 1, studentName: 'John Doe', course: 'BSCS', courseUnit: 'DSA', lecturerName: 'Kizito', status: 'Pending', dateSubmitted: '2025-03-15' },\r\n  { id: 2, studentName: 'Jane Smith', course: 'BSSE', courseUnit: 'SDP', lecturerName: 'Daniel', status: 'Resolved', dateSubmitted: '2025-03-16' },\r\n  { id: 3, studentName: 'Samuel Green', course: 'BLIS', courseUnit: 'SAAD', lecturerName: 'Kevin', status: 'Pending', dateSubmitted: '2025-03-17' },\r\n  { id: 3, studentName: 'Sarah Grace', course: 'BIST', courseUnit: 'SAAD', lecturerName: 'Kevin', status: 'Pending', dateSubmitted: '2025-03-14' },\r\n];\r\n\r\nexport default function RegistrarDashboard() {\r\n  const [issues, setIssues] = useState(initialIssues);\r\n\r\n  // Handle submission of new issues\r\n  const onSubmitIssue = (newIssue) => {\r\n    setIssues((prevIssues) => [...prevIssues, newIssue]);\r\n  };\r\n\r\n  // Toggle issue status between 'Pending' and 'Resolved'\r\n  const toggleStatus = (id) => {\r\n    setIssues((prevIssues) =>\r\n      prevIssues.map((issue) =>\r\n        issue.id === id\r\n          ? { ...issue, status: issue.status === 'Pending' ? 'Resolved' : 'Pending' }\r\n          : issue\r\n      )\r\n    );\r\n  };\r\n\r\n  // Group issues by lecturer for the student issues list\r\n  const groupByLecturer = issues.reduce((grouped, issue) => {\r\n    if (!grouped[issue.lecturerName]) {\r\n      grouped[issue.lecturerName] = [];\r\n    }\r\n    grouped[issue.lecturerName].push(issue);\r\n    return grouped;\r\n  }, {});\r\n\r\n  // Get list of unique lecturers and their course units\r\n  const lecturersList = Array.from(new Set(issues.map((issue) => issue.lecturerName)))\r\n    .map((lecturerName) => ({\r\n      lecturerName,\r\n      courses: issues.filter((issue) => issue.lecturerName === lecturerName).map((issue) => issue.courseUnit),\r\n    }));\r\n\r\n  return (\r\n    <div className=\"p-8 max-w-4xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">REGISTRAR DASHBOARD</h1>\r\n      \r\n      {/* Issue Page to submit new issues */}\r\n      <issuepage onSubmitIssue={onSubmitIssue} />\r\n\r\n      {/* Lecturers List */}\r\n      <h2 className=\"text-2xl font-bold mt-8 mb-4\">Lecturers and Course Units</h2>\r\n      <ul className=\"list-disc pl-6\">\r\n        {lecturersList.map((lecturer) => (\r\n          <li key={lecturer.lecturerName}>\r\n            <strong>{lecturer.lecturerName}:</strong> {lecturer.courses.join(', ')}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Student Issues List */}\r\n      <h2 className=\"text-2xl font-bold mt-8 mb-4\">Student Issues</h2>\r\n      {Object.keys(groupByLecturer).map((lecturer) => (\r\n        <div key={lecturer} className=\"mb-6\">\r\n          <h3 className=\"text-xl font-semibold\">{lecturer}</h3>\r\n          <table className=\"w-full border-collapse border border-gray-300 mt-4\">\r\n            <thead>\r\n              <tr className=\"bg-gray-200\">\r\n                <th className=\"border border-gray-300 p-2\">Student Name</th>\r\n                <th className=\"border border-gray-300 p-2\">Course</th>\r\n                <th className=\"border border-gray-300 p-2\">Course Unit</th>\r\n                <th className=\"border border-gray-300 p-2\">Date Submitted</th>\r\n                <th className=\"border border-gray-300 p-2\">Status</th>\r\n                <th className=\"border border-gray-300 p-2\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {groupByLecturer[lecturer].map((issue) => (\r\n                <tr key={issue.id} className=\"text-center\">\r\n                  <td className=\"border border-gray-300 p-2\">{issue.studentName}</td>\r\n                  <td className=\"border border-gray-300 p-2\">{issue.course}</td>\r\n                  <td className=\"border border-gray-300 p-2\">{issue.courseUnit}</td>\r\n                  <td className=\"border border-gray-300 p-2\">{issue.dateSubmitted}</td>\r\n                  <td className={`border border-gray-300 p-2 ${issue.status === 'Resolved' ? 'text-green-600' : 'text-red-600'}`}>{issue.status}</td>\r\n                  <td className=\"border border-gray-300 p-2\">\r\n                    <button\r\n                      onClick={() => toggleStatus(issue.id)}\r\n                      className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-4 rounded\"\r\n                    >\r\n                      {issue.status === 'Pending' ? 'Mark as Resolved' : 'Mark as Pending'}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}