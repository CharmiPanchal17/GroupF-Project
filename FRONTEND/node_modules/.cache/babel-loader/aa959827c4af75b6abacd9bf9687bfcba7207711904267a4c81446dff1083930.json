{"ast":null,"code":"import React,{useState}from\"react\";import{UpdateIssue}from\"../services/issueService\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Editpage(_ref){let{data,onClose}=_ref;console.log(\"data\",data);const id=data.id;const[courseUnit,setCourseUnit]=useState(data.course_unit);const[lecturerName,setLecturerName]=useState(data.lecturer_name);const[issueDetails,setIssueDetails]=useState(data.issue_details);const handleSubmit=event=>{event.preventDefault();const dataToSubmit={course_unit:courseUnit,lecturer_name:lecturerName,issue_details:issueDetails// Add other values here that you want to send to the database\n};// Assuming UpdateIssue is a function that submits the data\nUpdateIssue(id,dataToSubmit);// Close the modal after submitting\nif(onClose){onClose();// Call onClose to close the modal\n}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"EDIT ISSUE\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Course Unit:\"}),/*#__PURE__*/_jsx(\"textarea\",{onChange:e=>setCourseUnit(e.target.value),rows:\"1\",value:courseUnit,required:true}),/*#__PURE__*/_jsx(\"label\",{children:\"Lecturer's Name:\"}),/*#__PURE__*/_jsx(\"textarea\",{onChange:e=>setLecturerName(e.target.value),rows:\"1\",value:lecturerName,required:true}),/*#__PURE__*/_jsx(\"label\",{children:\"Issue Details:\"}),/*#__PURE__*/_jsx(\"textarea\",{onChange:e=>setIssueDetails(e.target.value),rows:\"3\",value:issueDetails,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]})]});}export default Editpage;","map":{"version":3,"names":["React","useState","UpdateIssue","jsx","_jsx","jsxs","_jsxs","Editpage","_ref","data","onClose","console","log","id","courseUnit","setCourseUnit","course_unit","lecturerName","setLecturerName","lecturer_name","issueDetails","setIssueDetails","issue_details","handleSubmit","event","preventDefault","dataToSubmit","children","onSubmit","onChange","e","target","value","rows","required","type"],"sources":["C:/Users/antho/Desktop/GroupF-Project/FRONTEND/src/components/Editpage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { UpdateIssue } from \"../services/issueService\";\r\n\r\nfunction Editpage({ data, onClose}) {\r\n  console.log(\"data\", data);\r\n\r\n  const id = data.id;\r\n  const [courseUnit, setCourseUnit] = useState(data.course_unit);\r\n  const [lecturerName, setLecturerName] = useState(data.lecturer_name);\r\n  const [issueDetails, setIssueDetails] = useState(data.issue_details);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const dataToSubmit = {\r\n        course_unit: courseUnit,\r\n        lecturer_name: lecturerName,\r\n        issue_details: issueDetails,\r\n      // Add other values here that you want to send to the database\r\n    };\r\n\r\n    // Assuming UpdateIssue is a function that submits the data\r\n    UpdateIssue(id, dataToSubmit);\r\n\r\n    // Close the modal after submitting\r\n    if (onClose) {\r\n      onClose(); // Call onClose to close the modal\r\n      \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>EDIT ISSUE</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Course Unit:</label>\r\n        <textarea\r\n          onChange={(e) => setCourseUnit(e.target.value)}\r\n          rows=\"1\"\r\n          value={courseUnit}\r\n          required\r\n        ></textarea>\r\n\r\n        <label>Lecturer's Name:</label>\r\n        <textarea\r\n          onChange={(e) => setLecturerName(e.target.value)}\r\n          rows=\"1\"\r\n          value={lecturerName}\r\n          required\r\n        ></textarea>\r\n\r\n        <label>Issue Details:</label>\r\n        <textarea\r\n          onChange={(e) => setIssueDetails(e.target.value)}\r\n          rows=\"3\"\r\n          value={issueDetails}\r\n          required\r\n        ></textarea>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editpage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvD,QAAS,CAAAC,QAAQA,CAAAC,IAAA,CAAmB,IAAlB,CAAEC,IAAI,CAAEC,OAAO,CAAC,CAAAF,IAAA,CAChCG,OAAO,CAACC,GAAG,CAAC,MAAM,CAAEH,IAAI,CAAC,CAEzB,KAAM,CAAAI,EAAE,CAAGJ,IAAI,CAACI,EAAE,CAClB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAACQ,IAAI,CAACO,WAAW,CAAC,CAC9D,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGjB,QAAQ,CAACQ,IAAI,CAACU,aAAa,CAAC,CACpE,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGpB,QAAQ,CAACQ,IAAI,CAACa,aAAa,CAAC,CAEpE,KAAM,CAAAC,YAAY,CAAIC,KAAK,EAAK,CAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,KAAM,CAAAC,YAAY,CAAG,CACjBV,WAAW,CAAEF,UAAU,CACvBK,aAAa,CAAEF,YAAY,CAC3BK,aAAa,CAAEF,YACjB;AACF,CAAC,CAED;AACAlB,WAAW,CAACW,EAAE,CAAEa,YAAY,CAAC,CAE7B;AACA,GAAIhB,OAAO,CAAE,CACXA,OAAO,CAAC,CAAC,CAAE;AAEb,CACF,CAAC,CAED,mBACEJ,KAAA,QAAAqB,QAAA,eACEvB,IAAA,OAAAuB,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBrB,KAAA,SAAMsB,QAAQ,CAAEL,YAAa,CAAAI,QAAA,eAC3BvB,IAAA,UAAAuB,QAAA,CAAO,cAAY,CAAO,CAAC,cAC3BvB,IAAA,aACEyB,QAAQ,CAAGC,CAAC,EAAKf,aAAa,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAC/CC,IAAI,CAAC,GAAG,CACRD,KAAK,CAAElB,UAAW,CAClBoB,QAAQ,MACC,CAAC,cAEZ9B,IAAA,UAAAuB,QAAA,CAAO,kBAAgB,CAAO,CAAC,cAC/BvB,IAAA,aACEyB,QAAQ,CAAGC,CAAC,EAAKZ,eAAe,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CACjDC,IAAI,CAAC,GAAG,CACRD,KAAK,CAAEf,YAAa,CACpBiB,QAAQ,MACC,CAAC,cAEZ9B,IAAA,UAAAuB,QAAA,CAAO,gBAAc,CAAO,CAAC,cAC7BvB,IAAA,aACEyB,QAAQ,CAAGC,CAAC,EAAKT,eAAe,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CACjDC,IAAI,CAAC,GAAG,CACRD,KAAK,CAAEZ,YAAa,CACpBc,QAAQ,MACC,CAAC,cAEZ9B,IAAA,WAAQ+B,IAAI,CAAC,QAAQ,CAAAR,QAAA,CAAC,QAAM,CAAQ,CAAC,EACjC,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAApB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}