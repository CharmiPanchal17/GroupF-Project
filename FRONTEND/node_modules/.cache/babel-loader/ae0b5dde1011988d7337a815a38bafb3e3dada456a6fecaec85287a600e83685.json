{"ast":null,"code":"// src/services/authService.js\nimport axios from 'axios';\nimport toast from \"react-hot-toast\";\nconst API_URL = `${process.env.REACT_APP_API_URL}/token/`;\nconst login = async data => {\n  try {\n    const response = await axios.post(API_URL, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.status) {\n      localStorage.setItem('token', response.data.access);\n      localStorage.setItem('refresh_token', response.data.refresh);\n      toast('Login Successful.', {\n        style: {\n          backgroundColor: 'green',\n          color: 'white'\n        }\n      });\n      return response;\n    }\n  } catch (error) {\n    var _error$response;\n    toast('Login Not Successful.', {\n      style: {\n        backgroundColor: 'red',\n        color: 'white'\n      }\n    });\n    console.error(\"Login failed:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  }\n};\nconst logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('refresh_token');\n};\nconst getAccessToken = () => {\n  return localStorage.getItem('token');\n};\nconst refreshAccessToken = async () => {\n  const refreshToken = localStorage.getItem('refresh_token');\n  if (refreshToken) {\n    const response = await axios.post(`${process.env.REACT_APP_API_URL}/token/refresh/`, {\n      refresh: refreshToken\n    });\n    localStorage.setItem('token', response.data.access);\n    return response.data.access;\n  }\n  return null;\n};\nconst authService = {\n  login,\n  logout,\n  getAccessToken,\n  refreshAccessToken\n};\nexport default authService;","map":{"version":3,"names":["axios","toast","API_URL","process","env","REACT_APP_API_URL","login","data","response","post","headers","status","localStorage","setItem","access","refresh","style","backgroundColor","color","error","_error$response","console","message","logout","removeItem","getAccessToken","getItem","refreshAccessToken","refreshToken","authService"],"sources":["C:/Users/antho/Desktop/GroupF-Project/FRONTEND/src/services/authService.js"],"sourcesContent":["// src/services/authService.js\r\nimport axios from 'axios';\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst API_URL = `${process.env.REACT_APP_API_URL}/token/`;\r\n\r\n\r\nconst login = async (data) => {\r\n\r\n    try {\r\n        const response = await axios.post(API_URL, data, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        if (response.status) {\r\n            localStorage.setItem('token', response.data.access);\r\n            localStorage.setItem('refresh_token', response.data.refresh);\r\n            toast('Login Successful.', {style: {backgroundColor: 'green', color: 'white'}})\r\n            return response\r\n        }\r\n    } catch (error) {\r\n        toast('Login Not Successful.', {style: {backgroundColor: 'red', color: 'white'}})\r\n        console.error(\"Login failed:\", error.response?.data || error.message);\r\n    }\r\n};\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('refresh_token');\r\n};\r\n\r\nconst getAccessToken = () => {\r\n    return localStorage.getItem('token');\r\n};\r\n\r\nconst refreshAccessToken = async () => {\r\n    const refreshToken = localStorage.getItem('refresh_token');\r\n    if (refreshToken) {\r\n        const response = await axios.post(`${process.env.REACT_APP_API_URL}/token/refresh/`, { refresh: refreshToken });\r\n        localStorage.setItem('token', response.data.access);\r\n        return response.data.access;\r\n    }\r\n    return null;\r\n};\r\n\r\nconst authService = {\r\n    login,\r\n    logout,\r\n    getAccessToken,\r\n    refreshAccessToken,\r\n}\r\n\r\nexport default authService;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,iBAAiB;AAEnC,MAAMC,OAAO,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,SAAS;AAGzD,MAAMC,KAAK,GAAG,MAAOC,IAAI,IAAK;EAE1B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAACP,OAAO,EAAEK,IAAI,EAAE;MAC7CG,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,IAAIF,QAAQ,CAACG,MAAM,EAAE;MACjBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACD,IAAI,CAACO,MAAM,CAAC;MACnDF,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEL,QAAQ,CAACD,IAAI,CAACQ,OAAO,CAAC;MAC5Dd,KAAK,CAAC,mBAAmB,EAAE;QAACe,KAAK,EAAE;UAACC,eAAe,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAO;MAAC,CAAC,CAAC;MAC/E,OAAOV,QAAQ;IACnB;EACJ,CAAC,CAAC,OAAOW,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZnB,KAAK,CAAC,uBAAuB,EAAE;MAACe,KAAK,EAAE;QAACC,eAAe,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAO;IAAC,CAAC,CAAC;IACjFG,OAAO,CAACF,KAAK,CAAC,eAAe,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACX,QAAQ,cAAAY,eAAA,uBAAdA,eAAA,CAAgBb,IAAI,KAAIY,KAAK,CAACG,OAAO,CAAC;EACzE;AACJ,CAAC;AAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACjBX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;EAChCZ,YAAY,CAACY,UAAU,CAAC,eAAe,CAAC;AAC5C,CAAC;AAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,OAAOb,YAAY,CAACc,OAAO,CAAC,OAAO,CAAC;AACxC,CAAC;AAED,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMC,YAAY,GAAGhB,YAAY,CAACc,OAAO,CAAC,eAAe,CAAC;EAC1D,IAAIE,YAAY,EAAE;IACd,MAAMpB,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGN,OAAO,CAACC,GAAG,CAACC,iBAAiB,iBAAiB,EAAE;MAAEU,OAAO,EAAEa;IAAa,CAAC,CAAC;IAC/GhB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACD,IAAI,CAACO,MAAM,CAAC;IACnD,OAAON,QAAQ,CAACD,IAAI,CAACO,MAAM;EAC/B;EACA,OAAO,IAAI;AACf,CAAC;AAED,MAAMe,WAAW,GAAG;EAChBvB,KAAK;EACLiB,MAAM;EACNE,cAAc;EACdE;AACJ,CAAC;AAED,eAAeE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}