{"ast":null,"code":"import React,{useState}from'react';import authService from'../services/authService';import'./LoginPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginPage=_ref=>{let{setUser}=_ref;const[credentials,setCredentials]=useState({email:'',password:''});const[error,setError]=useState('');// Handle input changes\nconst handleChange=e=>{setCredentials({...credentials,[e.target.name]:e.target.value});};// Handle form submission\nconst handleLogin=async e=>{var _response$data;e.preventDefault();const response=await authService.login(credentials);if(response!==null&&response!==void 0&&(_response$data=response.data)!==null&&_response$data!==void 0&&_response$data.access){var _response$data2;const token=response===null||response===void 0?void 0:(_response$data2=response.data)===null||_response$data2===void 0?void 0:_response$data2.access;if(token){window.location.reload();}}};return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",placeholder:\"Email\",value:credentials.email,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",placeholder:\"Password\",value:credentials.password,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Don't have an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"/register\",children:\"Register\"})]})]})});};export default LoginPage;","map":{"version":3,"names":["React","useState","authService","jsx","_jsx","jsxs","_jsxs","LoginPage","_ref","setUser","credentials","setCredentials","email","password","error","setError","handleChange","e","target","name","value","handleLogin","_response$data","preventDefault","response","login","data","access","_response$data2","token","window","location","reload","className","children","onSubmit","type","placeholder","onChange","required","href"],"sources":["C:/Users/antho/Desktop/GroupF-Project/FRONTEND/src/AITS_Pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport authService from '../services/authService';\r\nimport './LoginPage.css';\r\n\r\nconst LoginPage = ({ setUser }) => {\r\n  const [credentials, setCredentials] = useState({ email: '', password: '' });\r\n  const [error, setError] = useState('');\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const response = await authService.login(credentials)\r\n    if (response?.data?.access) {\r\n      const token = response?.data?.access\r\n      if (token) {\r\n        window.location.reload();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-form\">\r\n        <h2>Login</h2>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        <form onSubmit={handleLogin}>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={credentials.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={credentials.password}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <button type=\"submit\" >Login</button>\r\n        </form>\r\n        <p>Don't have an account? <a href=\"/register\">Register</a></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,WAAW,KAAM,yBAAyB,CACjD,MAAO,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzB,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CAC5B,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,CAAEW,KAAK,CAAE,EAAE,CAAEC,QAAQ,CAAE,EAAG,CAAC,CAAC,CAC3E,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAEtC;AACA,KAAM,CAAAe,YAAY,CAAIC,CAAC,EAAK,CAC1BN,cAAc,CAAC,CAAE,GAAGD,WAAW,CAAE,CAACO,CAAC,CAACC,MAAM,CAACC,IAAI,EAAGF,CAAC,CAACC,MAAM,CAACE,KAAM,CAAC,CAAC,CACrE,CAAC,CAED;AACA,KAAM,CAAAC,WAAW,CAAG,KAAO,CAAAJ,CAAC,EAAK,KAAAK,cAAA,CAC/BL,CAAC,CAACM,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAtB,WAAW,CAACuB,KAAK,CAACf,WAAW,CAAC,CACrD,GAAIc,QAAQ,SAARA,QAAQ,YAAAF,cAAA,CAARE,QAAQ,CAAEE,IAAI,UAAAJ,cAAA,WAAdA,cAAA,CAAgBK,MAAM,CAAE,KAAAC,eAAA,CAC1B,KAAM,CAAAC,KAAK,CAAGL,QAAQ,SAARA,QAAQ,kBAAAI,eAAA,CAARJ,QAAQ,CAAEE,IAAI,UAAAE,eAAA,iBAAdA,eAAA,CAAgBD,MAAM,CACpC,GAAIE,KAAK,CAAE,CACTC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAC1B,CACF,CACF,CAAC,CAED,mBACE5B,IAAA,QAAK6B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9B5B,KAAA,QAAK2B,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB9B,IAAA,OAAA8B,QAAA,CAAI,OAAK,CAAI,CAAC,CACbpB,KAAK,eAAIV,IAAA,MAAG6B,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEpB,KAAK,CAAI,CAAC,cAClDR,KAAA,SAAM6B,QAAQ,CAAEd,WAAY,CAAAa,QAAA,eAC1B9B,IAAA,UACEgC,IAAI,CAAC,OAAO,CACZjB,IAAI,CAAC,OAAO,CACZkB,WAAW,CAAC,OAAO,CACnBjB,KAAK,CAAEV,WAAW,CAACE,KAAM,CACzB0B,QAAQ,CAAEtB,YAAa,CACvBuB,QAAQ,MACT,CAAC,cACFnC,IAAA,UACEgC,IAAI,CAAC,UAAU,CACfjB,IAAI,CAAC,UAAU,CACfkB,WAAW,CAAC,UAAU,CACtBjB,KAAK,CAAEV,WAAW,CAACG,QAAS,CAC5ByB,QAAQ,CAAEtB,YAAa,CACvBuB,QAAQ,MACT,CAAC,cACFnC,IAAA,WAAQgC,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAE,OAAK,CAAQ,CAAC,EACjC,CAAC,cACP5B,KAAA,MAAA4B,QAAA,EAAG,yBAAuB,cAAA9B,IAAA,MAAGoC,IAAI,CAAC,WAAW,CAAAN,QAAA,CAAC,UAAQ,CAAG,CAAC,EAAG,CAAC,EAC3D,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA3B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}